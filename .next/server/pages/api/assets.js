"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/assets";
exports.ids = ["pages/api/assets"];
exports.modules = {

/***/ "mime":
/*!***********************!*\
  !*** external "mime" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("mime");

/***/ }),

/***/ "nullthrows":
/*!*****************************!*\
  !*** external "nullthrows" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("nullthrows");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./common/helpers.ts":
/*!***************************!*\
  !*** ./common/helpers.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NoUpdateAvailableError\": () => (/* binding */ NoUpdateAvailableError),\n/* harmony export */   \"convertToDictionaryItemsRepresentation\": () => (/* binding */ convertToDictionaryItemsRepresentation),\n/* harmony export */   \"signRSASHA256\": () => (/* binding */ signRSASHA256),\n/* harmony export */   \"getPrivateKeyAsync\": () => (/* binding */ getPrivateKeyAsync),\n/* harmony export */   \"getLatestUpdateBundlePathForRuntimeVersionAsync\": () => (/* binding */ getLatestUpdateBundlePathForRuntimeVersionAsync),\n/* harmony export */   \"getAssetMetadataAsync\": () => (/* binding */ getAssetMetadataAsync),\n/* harmony export */   \"createRollBackDirectiveAsync\": () => (/* binding */ createRollBackDirectiveAsync),\n/* harmony export */   \"createNoUpdateAvailableDirectiveAsync\": () => (/* binding */ createNoUpdateAvailableDirectiveAsync),\n/* harmony export */   \"getMetadataAsync\": () => (/* binding */ getMetadataAsync),\n/* harmony export */   \"getExpoConfigAsync\": () => (/* binding */ getExpoConfigAsync),\n/* harmony export */   \"convertSHA256HashToUUID\": () => (/* binding */ convertSHA256HashToUUID),\n/* harmony export */   \"truthy\": () => (/* binding */ truthy)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mime */ \"mime\");\n/* harmony import */ var mime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mime__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nclass NoUpdateAvailableError extends Error {\n}\nfunction createHash(file, hashingAlgorithm, encoding) {\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(hashingAlgorithm).update(file).digest(encoding);\n}\nfunction getBase64URLEncoding(base64EncodedString) {\n    return base64EncodedString.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n}\nfunction convertToDictionaryItemsRepresentation(obj) {\n    return new Map(Object.entries(obj).map(([k, v])=>{\n        return [\n            k,\n            [\n                v,\n                new Map()\n            ]\n        ];\n    }));\n}\nfunction signRSASHA256(data, privateKey) {\n    const sign = crypto__WEBPACK_IMPORTED_MODULE_0___default().createSign(\"RSA-SHA256\");\n    sign.update(data, \"utf8\");\n    sign.end();\n    return sign.sign(privateKey, \"base64\");\n}\nasync function getPrivateKeyAsync() {\n    const privateKeyPath = process.env.PRIVATE_KEY_PATH;\n    if (!privateKeyPath) {\n        return null;\n    }\n    const pemBuffer = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(path__WEBPACK_IMPORTED_MODULE_4___default().resolve(privateKeyPath));\n    return pemBuffer.toString(\"utf8\");\n}\nasync function getLatestUpdateBundlePathForRuntimeVersionAsync(runtimeVersion) {\n    const updatesDirectoryForRuntimeVersion = `updates/${runtimeVersion}`;\n    if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(updatesDirectoryForRuntimeVersion)) {\n        throw new Error(\"Unsupported runtime version\");\n    }\n    const filesInUpdatesDirectory = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readdir(updatesDirectoryForRuntimeVersion);\n    const directoriesInUpdatesDirectory = (await Promise.all(filesInUpdatesDirectory.map(async (file)=>{\n        const fileStat = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(path__WEBPACK_IMPORTED_MODULE_4___default().join(updatesDirectoryForRuntimeVersion, file));\n        return fileStat.isDirectory() ? file : null;\n    }))).filter(truthy).sort((a, b)=>parseInt(b, 10) - parseInt(a, 10)\n    );\n    return path__WEBPACK_IMPORTED_MODULE_4___default().join(updatesDirectoryForRuntimeVersion, directoriesInUpdatesDirectory[0]);\n}\nasync function getAssetMetadataAsync(arg) {\n    const assetFilePath = `${arg.updateBundlePath}/${arg.filePath}`;\n    const asset = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(path__WEBPACK_IMPORTED_MODULE_4___default().resolve(assetFilePath), null);\n    const assetHash = getBase64URLEncoding(createHash(asset, \"sha256\", \"base64\"));\n    const key = createHash(asset, \"md5\", \"hex\");\n    const keyExtensionSuffix = arg.isLaunchAsset ? \"bundle\" : arg.ext;\n    const contentType = arg.isLaunchAsset ? \"application/javascript\" : mime__WEBPACK_IMPORTED_MODULE_3___default().getType(arg.ext);\n    return {\n        hash: assetHash,\n        key,\n        fileExtension: `.${keyExtensionSuffix}`,\n        contentType,\n        url: `${process.env.HOSTNAME}/api/assets?asset=${assetFilePath}&runtimeVersion=${arg.runtimeVersion}&platform=${arg.platform}`\n    };\n}\nasync function createRollBackDirectiveAsync(updateBundlePath) {\n    try {\n        const rollbackFilePath = `${updateBundlePath}/rollback`;\n        const rollbackFileStat = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(rollbackFilePath);\n        return {\n            type: \"rollBackToEmbedded\",\n            parameters: {\n                commitTime: new Date(rollbackFileStat.birthtime).toISOString()\n            }\n        };\n    } catch (error) {\n        throw new Error(`No rollback found. Error: ${error}`);\n    }\n}\nasync function createNoUpdateAvailableDirectiveAsync() {\n    return {\n        type: \"noUpdateAvailable\"\n    };\n}\nasync function getMetadataAsync({ updateBundlePath , runtimeVersion  }) {\n    try {\n        const metadataPath = `${updateBundlePath}/metadata.json`;\n        const updateMetadataBuffer = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(path__WEBPACK_IMPORTED_MODULE_4___default().resolve(metadataPath), null);\n        const metadataJson = JSON.parse(updateMetadataBuffer.toString(\"utf-8\"));\n        const metadataStat = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(metadataPath);\n        return {\n            metadataJson,\n            createdAt: new Date(metadataStat.birthtime).toISOString(),\n            id: createHash(updateMetadataBuffer, \"sha256\", \"hex\")\n        };\n    } catch (error) {\n        throw new Error(`No update found with runtime version: ${runtimeVersion}. Error: ${error}`);\n    }\n}\n/**\n * This adds the `@expo/config`-exported config to `extra.expoConfig`, which is a common thing\n * done by implementors of the expo-updates specification since a lot of Expo modules use it.\n * It is not required by the specification, but is included here in the example client and server\n * for demonstration purposes. EAS Update does something conceptually very similar.\n */ async function getExpoConfigAsync({ updateBundlePath , runtimeVersion  }) {\n    try {\n        const expoConfigPath = `${updateBundlePath}/expoConfig.json`;\n        const expoConfigBuffer = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(path__WEBPACK_IMPORTED_MODULE_4___default().resolve(expoConfigPath), null);\n        const expoConfigJson = JSON.parse(expoConfigBuffer.toString(\"utf-8\"));\n        return expoConfigJson;\n    } catch (error) {\n        throw new Error(`No expo config json found with runtime version: ${runtimeVersion}. Error: ${error}`);\n    }\n}\nfunction convertSHA256HashToUUID(value) {\n    return `${value.slice(0, 8)}-${value.slice(8, 12)}-${value.slice(12, 16)}-${value.slice(16, 20)}-${value.slice(20, 32)}`;\n}\nfunction truthy(value) {\n    return !!value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./common/helpers.ts\n");

/***/ }),

/***/ "(api)/./pages/api/assets.ts":
/*!*****************************!*\
  !*** ./pages/api/assets.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ assetsEndpoint)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mime */ \"mime\");\n/* harmony import */ var mime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var nullthrows__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! nullthrows */ \"nullthrows\");\n/* harmony import */ var nullthrows__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(nullthrows__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _common_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers */ \"(api)/./common/helpers.ts\");\n\n\n\n\n\nasync function assetsEndpoint(req, res) {\n    const { asset: assetName , runtimeVersion , platform  } = req.query;\n    if (!assetName || typeof assetName !== \"string\") {\n        res.statusCode = 400;\n        res.json({\n            error: \"No asset name provided.\"\n        });\n        return;\n    }\n    if (platform !== \"ios\" && platform !== \"android\") {\n        res.statusCode = 400;\n        res.json({\n            error: 'No platform provided. Expected \"ios\" or \"android\".'\n        });\n        return;\n    }\n    if (!runtimeVersion || typeof runtimeVersion !== \"string\") {\n        res.statusCode = 400;\n        res.json({\n            error: \"No runtimeVersion provided.\"\n        });\n        return;\n    }\n    let updateBundlePath;\n    try {\n        updateBundlePath = await (0,_common_helpers__WEBPACK_IMPORTED_MODULE_4__.getLatestUpdateBundlePathForRuntimeVersionAsync)(runtimeVersion);\n    } catch (error) {\n        res.statusCode = 404;\n        res.json({\n            error: error.message\n        });\n        return;\n    }\n    const { metadataJson  } = await (0,_common_helpers__WEBPACK_IMPORTED_MODULE_4__.getMetadataAsync)({\n        updateBundlePath,\n        runtimeVersion\n    });\n    const assetPath = path__WEBPACK_IMPORTED_MODULE_3___default().resolve(assetName);\n    const assetMetadata = metadataJson.fileMetadata[platform].assets.find((asset)=>asset.path === assetName.replace(`${updateBundlePath}/`, \"\")\n    );\n    const isLaunchAsset = metadataJson.fileMetadata[platform].bundle === assetName.replace(`${updateBundlePath}/`, \"\");\n    if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(assetPath)) {\n        res.statusCode = 404;\n        res.json({\n            error: `Asset \"${assetName}\" does not exist.`\n        });\n        return;\n    }\n    try {\n        const asset = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(assetPath, null);\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", isLaunchAsset ? \"application/javascript\" : nullthrows__WEBPACK_IMPORTED_MODULE_2___default()(mime__WEBPACK_IMPORTED_MODULE_1___default().getType(assetMetadata.ext)));\n        res.end(asset);\n    } catch (error1) {\n        console.log(error1);\n        res.statusCode = 500;\n        res.json({\n            error: error1\n        });\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2RKLGFBQWEsR0FBRyx3QkFBd0IsR0FBR3pCLGlEQUFVLENBQUNELG1EQUFZLENBQUNxQixhQUFhLENBQUNXLEdBQUcsQ0FBQyxDQUFDLENBQ3ZGLENBQUM7UUFDRnpCLEdBQUcsQ0FBQzBCLEdBQUcsQ0FBQ3pCLEtBQUssQ0FBQyxDQUFDO0tBQ2hCLENBQUMsT0FBT08sTUFBSyxFQUFFO1FBQ2RtQixPQUFPLENBQUNDLEdBQUcsQ0FBQ3BCLE1BQUssQ0FBQyxDQUFDO1FBQ25CUixHQUFHLENBQUNNLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDckJOLEdBQUcsQ0FBQ08sSUFBSSxDQUFDO1lBQUVDLEtBQUssRUFBTEEsTUFBSztTQUFFLENBQUMsQ0FBQztLQUNyQjtDQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3VzdG9tLWV4cG8tdXBkYXRlcy1zZXJ2ZXIvLi9wYWdlcy9hcGkvYXNzZXRzLnRzP2YwZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBtaW1lIGZyb20gJ21pbWUnO1xuaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IG51bGx0aHJvd3MgZnJvbSAnbnVsbHRocm93cyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuaW1wb3J0IHtcbiAgZ2V0TGF0ZXN0VXBkYXRlQnVuZGxlUGF0aEZvclJ1bnRpbWVWZXJzaW9uQXN5bmMsXG4gIGdldE1ldGFkYXRhQXN5bmMsXG59IGZyb20gJy4uLy4uL2NvbW1vbi9oZWxwZXJzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gYXNzZXRzRW5kcG9pbnQocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcbiAgY29uc3QgeyBhc3NldDogYXNzZXROYW1lLCBydW50aW1lVmVyc2lvbiwgcGxhdGZvcm0gfSA9IHJlcS5xdWVyeTtcblxuICBpZiAoIWFzc2V0TmFtZSB8fCB0eXBlb2YgYXNzZXROYW1lICE9PSAnc3RyaW5nJykge1xuICAgIHJlcy5zdGF0dXNDb2RlID0gNDAwO1xuICAgIHJlcy5qc29uKHsgZXJyb3I6ICdObyBhc3NldCBuYW1lIHByb3ZpZGVkLicgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHBsYXRmb3JtICE9PSAnaW9zJyAmJiBwbGF0Zm9ybSAhPT0gJ2FuZHJvaWQnKSB7XG4gICAgcmVzLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgcmVzLmpzb24oeyBlcnJvcjogJ05vIHBsYXRmb3JtIHByb3ZpZGVkLiBFeHBlY3RlZCBcImlvc1wiIG9yIFwiYW5kcm9pZFwiLicgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCFydW50aW1lVmVyc2lvbiB8fCB0eXBlb2YgcnVudGltZVZlcnNpb24gIT09ICdzdHJpbmcnKSB7XG4gICAgcmVzLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgcmVzLmpzb24oeyBlcnJvcjogJ05vIHJ1bnRpbWVWZXJzaW9uIHByb3ZpZGVkLicgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbGV0IHVwZGF0ZUJ1bmRsZVBhdGg6IHN0cmluZztcbiAgdHJ5IHtcbiAgICB1cGRhdGVCdW5kbGVQYXRoID0gYXdhaXQgZ2V0TGF0ZXN0VXBkYXRlQnVuZGxlUGF0aEZvclJ1bnRpbWVWZXJzaW9uQXN5bmMocnVudGltZVZlcnNpb24pO1xuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgcmVzLnN0YXR1c0NvZGUgPSA0MDQ7XG4gICAgcmVzLmpzb24oe1xuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgeyBtZXRhZGF0YUpzb24gfSA9IGF3YWl0IGdldE1ldGFkYXRhQXN5bmMoe1xuICAgIHVwZGF0ZUJ1bmRsZVBhdGgsXG4gICAgcnVudGltZVZlcnNpb24sXG4gIH0pO1xuXG4gIGNvbnN0IGFzc2V0UGF0aCA9IHBhdGgucmVzb2x2ZShhc3NldE5hbWUpO1xuICBjb25zdCBhc3NldE1ldGFkYXRhID0gbWV0YWRhdGFKc29uLmZpbGVNZXRhZGF0YVtwbGF0Zm9ybV0uYXNzZXRzLmZpbmQoXG4gICAgKGFzc2V0OiBhbnkpID0+IGFzc2V0LnBhdGggPT09IGFzc2V0TmFtZS5yZXBsYWNlKGAke3VwZGF0ZUJ1bmRsZVBhdGh9L2AsICcnKVxuICApO1xuICBjb25zdCBpc0xhdW5jaEFzc2V0ID1cbiAgICBtZXRhZGF0YUpzb24uZmlsZU1ldGFkYXRhW3BsYXRmb3JtXS5idW5kbGUgPT09IGFzc2V0TmFtZS5yZXBsYWNlKGAke3VwZGF0ZUJ1bmRsZVBhdGh9L2AsICcnKTtcblxuICBpZiAoIWZzLmV4aXN0c1N5bmMoYXNzZXRQYXRoKSkge1xuICAgIHJlcy5zdGF0dXNDb2RlID0gNDA0O1xuICAgIHJlcy5qc29uKHsgZXJyb3I6IGBBc3NldCBcIiR7YXNzZXROYW1lfVwiIGRvZXMgbm90IGV4aXN0LmAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBhc3NldCA9IGZzLnJlYWRGaWxlU3luYyhhc3NldFBhdGgsIG51bGwpO1xuXG4gICAgcmVzLnN0YXR1c0NvZGUgPSAyMDA7XG4gICAgcmVzLnNldEhlYWRlcihcbiAgICAgICdjb250ZW50LXR5cGUnLFxuICAgICAgaXNMYXVuY2hBc3NldCA/ICdhcHBsaWNhdGlvbi9qYXZhc2NyaXB0JyA6IG51bGx0aHJvd3MobWltZS5nZXRUeXBlKGFzc2V0TWV0YWRhdGEuZXh0KSlcbiAgICApO1xuICAgIHJlcy5lbmQoYXNzZXQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICByZXMuc3RhdHVzQ29kZSA9IDUwMDtcbiAgICByZXMuanNvbih7IGVycm9yIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiZnMiLCJtaW1lIiwibnVsbHRocm93cyIsInBhdGgiLCJnZXRMYXRlc3RVcGRhdGVCdW5kbGVQYXRoRm9yUnVudGltZVZlcnNpb25Bc3luYyIsImdldE1ldGFkYXRhQXN5bmMiLCJhc3NldHNFbmRwb2ludCIsInJlcSIsInJlcyIsImFzc2V0IiwiYXNzZXROYW1lIiwicnVudGltZVZlcnNpb24iLCJwbGF0Zm9ybSIsInF1ZXJ5Iiwic3RhdHVzQ29kZSIsImpzb24iLCJlcnJvciIsInVwZGF0ZUJ1bmRsZVBhdGgiLCJtZXNzYWdlIiwibWV0YWRhdGFKc29uIiwiYXNzZXRQYXRoIiwicmVzb2x2ZSIsImFzc2V0TWV0YWRhdGEiLCJmaWxlTWV0YWRhdGEiLCJhc3NldHMiLCJmaW5kIiwicmVwbGFjZSIsImlzTGF1bmNoQXNzZXQiLCJidW5kbGUiLCJleGlzdHNTeW5jIiwicmVhZEZpbGVTeW5jIiwic2V0SGVhZGVyIiwiZ2V0VHlwZSIsImV4dCIsImVuZCIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/assets.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/assets.ts"));
module.exports = __webpack_exports__;

})();